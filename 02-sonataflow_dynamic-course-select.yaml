apiVersion: sonataflow.org/v1alpha08
kind: SonataFlow
metadata:
  annotations:
    sonataflow.org/description: Simple workflow demonstrating basics of using the
      orchestrator-form-widgets library. Requires corresponding HTTP endpoints to
      be up and proxy to be configured.
    sonataflow.org/expressionLang: jq
    sonataflow.org/profile: dev
    sonataflow.org/version: "1.0"
  creationTimestamp: null
  labels:
    app: dynamic-course-select
    sonataflow.org/workflow-app: dynamic-course-select
  name: dynamic-course-select
  namespace: fordemo
spec:
  flow:
    dataInputSchema:
      failOnValidationErrors: true
      schema: schemas/dynamic-course-select__main-schema.json
    functions:
    - name: PrintSuccessData
      operation: '{ "result": { "message": "The workflow finished successfully.",
        "outputs": [ { "key": "resourceOne", "value": $WORKFLOW.instanceId }, { "key":
        "studentName", "value": .studentName }, { "key": "courseName", "value": .courseName
        }, { "key": "room", "value": .courseDetails.room }, { "key": "requestCertificate",
        "value": .courseDetails.requestCertificate } ] } }'
      type: expression
    start:
      stateName: Start
    states:
    - actionMode: sequential
      actions:
      - actionDataFilter:
          useResults: true
        functionRef:
          invoke: sync
          refName: PrintSuccessData
        name: Fill progress data
      end:
        terminate: true
      name: Start
      type: operation
  podTemplate:
    container:
      # image: quay.io ...  UPDATE ME 
      resources: {}
  resources:
    configMaps:
    - configMap:
        name: 01-dynamic-course-select-resources-schemas
      workflowPath: schemas
status:
  address: {}
  lastTimeRecoverAttempt: null
